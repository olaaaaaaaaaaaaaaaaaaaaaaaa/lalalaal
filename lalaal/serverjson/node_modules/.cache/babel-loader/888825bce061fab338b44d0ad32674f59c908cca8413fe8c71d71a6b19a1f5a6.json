{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\iryna\\\\serverjson\\\\src\\\\components\\\\TaskTodo\\\\TaskTodo.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport styles from \"./Task.module.css\";\nimport { Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskTodo = ({\n  todo,\n  deleteTask,\n  updateTask\n}) => {\n  _s();\n  const [edit, setEdit] = useState(null);\n  const [value, setValue] = useState(\"\");\n  const editTodo = (id, title) => {\n    setEdit(id);\n    setValue(title);\n  };\n  const handleSave = id => {\n    updateTask(id, value);\n    setEdit(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.contanier,\n    children: todo.map(e => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.listItems,\n      children: [edit === e.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: value,\n          onChange: ({\n            target\n          }) => setValue(target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          onClick: () => handleSave(e.id),\n          className: styles.btn,\n          children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.abc,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this), e.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          onClick: () => deleteTask(e.id),\n          className: styles.btn,\n          children: \"\\u0443\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          onClick: () => editTodo(e.id, e.title),\n          className: styles.btn,\n          children: \"\\u0440\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, e.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskTodo, \"AiVZxLKiTDAKdkz46V/Tjh8gonU=\");\n_c = TaskTodo;\nexport default TaskTodo;\nvar _c;\n$RefreshReg$(_c, \"TaskTodo\");","map":{"version":3,"names":["React","useState","styles","Button","jsxDEV","_jsxDEV","TaskTodo","todo","deleteTask","updateTask","_s","edit","setEdit","value","setValue","editTodo","id","title","handleSave","className","contanier","children","map","e","listItems","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","btn","abc","_c","$RefreshReg$"],"sources":["C:/Users/iryna/serverjson/src/components/TaskTodo/TaskTodo.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport styles from \"./Task.module.css\";\r\nimport {  Button } from \"react-bootstrap\";\r\n\r\nconst TaskTodo = ({ todo, deleteTask, updateTask }) => {\r\n  const [edit, setEdit] = useState(null);\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const editTodo = (id, title) => {\r\n    setEdit(id);\r\n    setValue(title);\r\n  };\r\n\r\n  const handleSave = (id) => {\r\n    updateTask(id, value);\r\n    setEdit(null);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.contanier}>\r\n      {todo.map((e) => (\r\n        <div key={e.id} className={styles.listItems}>\r\n          {edit === e.id ? (\r\n            <div >\r\n              <input\r\n                value={value}\r\n                onChange={({ target }) => setValue(target.value)}\r\n              />\r\n              <Button\r\n                type=\"button\"\r\n                onClick={() => handleSave(e.id)}\r\n                className={styles.btn}\r\n              >\r\n                Сохранить\r\n              </Button>\r\n            </div>\r\n          ) : (\r\n            <div className={styles.abc}>\r\n              <input type=\"checkbox\" />\r\n              {e.title}\r\n            </div>\r\n          )}\r\n\r\n          <div >\r\n            <Button\r\n              type=\"button\"\r\n              onClick={() => deleteTask(e.id)}\r\n              className={styles.btn}\r\n            >\r\n              удалить\r\n            </Button>\r\n            <Button\r\n              type=\"button\"\r\n              onClick={() => editTodo(e.id, e.title)}\r\n              className={styles.btn}\r\n            >\r\n              редактировать\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskTodo;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}