{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\iryna\\\\serverjson\\\\src\\\\components\\\\Filter\\\\Filter.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Filter = ({\n  todo,\n  deleteTask,\n  updateTask\n}) => {\n  _s();\n  const [edit, setEdit] = useState(null);\n  const [value, setValue] = useState(\"\");\n  const [searchTerm, setSearchTerm] = useState(\"\"); // Состояние для хранения поискового запроса\n\n  const editTodo = (id, title) => {\n    setEdit(id);\n    setValue(title);\n  };\n\n  // Функция для фильтрации задач по поисковому запросу\n  const filteredTodo = todo.filter(task => task.title.toLowerCase().includes(searchTerm.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\u041F\\u043E\\u0438\\u0441\\u043A...\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), filteredTodo.map(e => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [edit === e.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: value,\n          onChange: ({\n            target\n          }) => setValue(target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => updateTask(e.id, value),\n          children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", e.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => deleteTask(e.id),\n          children: \"\\u0443\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => editTodo(e.id, e.title),\n          children: \"\\u0440\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, e.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(Filter, \"pAlBXxvKsk9wc+hG70CInfA7PIk=\");\n_c = Filter;\nexport default Filter;\nvar _c;\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Filter","todo","deleteTask","updateTask","_s","edit","setEdit","value","setValue","searchTerm","setSearchTerm","editTodo","id","title","filteredTodo","filter","task","toLowerCase","includes","children","type","placeholder","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","_c","$RefreshReg$"],"sources":["C:/Users/iryna/serverjson/src/components/Filter/Filter.js"],"sourcesContent":["\r\n\r\n\r\nimport React, { useState } from \"react\";\r\n\r\nconst Filter = ({ todo, deleteTask, updateTask }) => {\r\n  const [edit, setEdit] = useState(null);\r\n  const [value, setValue] = useState(\"\");\r\n  const [searchTerm, setSearchTerm] = useState(\"\"); // Состояние для хранения поискового запроса\r\n\r\n  const editTodo = (id, title) => {\r\n    setEdit(id);\r\n    setValue(title);\r\n  };\r\n\r\n  // Функция для фильтрации задач по поисковому запросу\r\n  const filteredTodo = todo.filter((task) =>\r\n    task.title.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {/* Поле ввода для поиска */}\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Поиск...\"\r\n        value={searchTerm}\r\n        onChange={(e) => setSearchTerm(e.target.value)}\r\n      />\r\n      \r\n      {/* Отображение списка задач после фильтрации */}\r\n      {filteredTodo.map((e) => (\r\n        <div key={e.id}>\r\n          {edit === e.id ? (\r\n            <div>\r\n              <input\r\n                value={value}\r\n                onChange={({ target }) => setValue(target.value)}\r\n              />\r\n              <button type=\"button\" onClick={() => updateTask(e.id, value)}>\r\n                Сохранить\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <div> {e.title}</div>\r\n          )}\r\n\r\n          <div>\r\n            <button type=\"button\" onClick={() => deleteTask(e.id)}>\r\n              удалить\r\n            </button>\r\n            <button type=\"button\" onClick={() => editTodo(e.id, e.title)}>\r\n              редактировать\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}