{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\iryna\\\\serverjson\\\\src\\\\components\\\\TaskTodo\\\\TaskTodo.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskTodo = ({\n  todo,\n  deleteTask,\n  setTodo\n}) => {\n  _s();\n  const [edit, setEdit] = useState(null);\n  const [value, setValue] = useState(\"\");\n  const editTodo = (id, title) => {\n    setEdit(id);\n    setValue(title);\n  };\n  const updateTask = id => {\n    fetch(`http://localhost:3009/products/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8'\n      },\n      body: JSON.stringify({\n        value: value\n      })\n    }).then(rawResponse => rawResponse.json()).then(response => {\n      const updatedTasks = todo.map(t => t.id === id ? {\n        ...t,\n        value: value\n      } : t);\n      setTodo(updatedTasks);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: todo.map(e => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [edit == e.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: value,\n          onChange: ({\n            target\n          }) => setValue(target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => updateTask(e.id),\n          children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", e.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => deleteTask(e.id),\n          children: \"\\u0443\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => editTodo(e.id, e.title),\n          children: \"\\u0440\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, e.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskTodo, \"AiVZxLKiTDAKdkz46V/Tjh8gonU=\");\n_c = TaskTodo;\nexport default TaskTodo;\nvar _c;\n$RefreshReg$(_c, \"TaskTodo\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TaskTodo","todo","deleteTask","setTodo","_s","edit","setEdit","value","setValue","editTodo","id","title","updateTask","fetch","method","headers","body","JSON","stringify","then","rawResponse","json","response","updatedTasks","map","t","children","e","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/iryna/serverjson/src/components/TaskTodo/TaskTodo.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst TaskTodo = ({ todo, deleteTask, setTodo }) => {\r\n  const [edit, setEdit] = useState(null);\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const editTodo = (id, title) => {\r\n    setEdit(id);\r\n    setValue(title);\r\n  };\r\n\r\n\r\n \r\nconst updateTask = (id) => {\r\n  fetch(`http://localhost:3009/products/${id}`, {\r\n    method: 'PUT',\r\n    headers: { 'Content-Type': 'application/json;charset=utf-8' },\r\n    body: JSON.stringify({\r\n      value: value\r\n    })\r\n  })\r\n    .then((rawResponse) => rawResponse.json())\r\n    .then((response) => {\r\n      const updatedTasks = todo.map((t) =>\r\n        t.id === id ? { ...t, value: value } : t\r\n      );\r\n      setTodo(updatedTasks);\r\n    });\r\n};\r\n\r\n  return (\r\n    <div>\r\n      {todo.map((e) => (\r\n        <div key={e.id}>\r\n          {edit == e.id ? (\r\n            <div>\r\n              <input\r\n                value={value}\r\n                onChange={({ target }) => setValue(target.value)}\r\n              />\r\n              <button type=\"button\" onClick={()=>updateTask(e.id)}>\r\n                Сохранить\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <div> {e.title}</div>\r\n          )}\r\n\r\n          <div>\r\n            <button type=\"button\" onClick={() => deleteTask(e.id)}>\r\n              удалить\r\n            </button>\r\n            <button type=\"button\" onClick={() => editTodo(e.id, e.title)}>\r\n              редактировать\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskTodo;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}